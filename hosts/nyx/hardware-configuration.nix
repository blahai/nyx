# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "ahci" "xhci_pci" "usbhid" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/465cd1e9-3e0f-4800-a28e-bde99c2fc6f8";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A32D-C27D";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  #fileSystems."/var/lib/docker/overlay2/7494aad14765ade76a2ecf82e21a3d20996943b4b3260e74feeeb01734c9db41/merged" =
  #  { device = "overlay";
  #    fsType = "overlay";
  #  };

  fileSystems."/mnt/ext" =
    { device = "/dev/disk/by-uuid/43280a82-cf9a-452e-9bdc-a8cc66ccd7c8";
      fsType = "btrfs";
      options = [ "async" "auto" "nofail" "noatime" ];
    };

  fileSystems."/mnt/ext/storage" =
    { device = "/dev/disk/by-uuid/349dd615-0054-453e-b6bd-a15938bf8366";
      fsType = "btrfs";
      options = [ "async" "auto" "nofail" "noatime" ];
      depends = [ "/mnt/ext" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/df753d88-0883-4084-acb3-e8a1d3192603"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp13s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp14s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
